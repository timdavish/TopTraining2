#!/usr/bin/env node

// Module dependencies
var app = require('../server/server');
var debug = require('debug')('top-training:server');
var http = require('http');

// Spin up http server (redirects to https server)
var httpPort = 3000;
var httpServer = http.createServer(app);
httpServer.listen(httpPort);
httpServer.on('error', onError);
httpServer.on('listening', onListening);

/* Functions */

/**
 * @name onError
 * @desc Event listener for server "error" event.
 * @param {event} error The error to address
 */
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

	var addr = this.address();

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(addr, 'requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(addr, 'is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * @name onListening
 * @desc Event listener for server "listening" event.
 */
function onListening() {
    var addr = this.address();

    debug('Listening on', addr);
    console.log('Listening on', addr);
}
